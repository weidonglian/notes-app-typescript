{
  "name": "notesapp",
  "version": "1.0.0",
  "description": "",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "main": "index.js",
  "scripts": {
    "db-start": "docker run --rm --name docker-postgres -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 -v ${DEVROOT}/docker/volumes/postgres:/var/lib/postgresql/data postgres:12.3",
    "db-stop": "docker container stop docker-postgres",
    "db-ssh": "docker exec -it docker-postgres psql -U postgres",
    "db-create": "./node_modules/db-migrate/bin/db-migrate --env postgres db:create",
    "db-drop": "./node_modules/db-migrate/bin/db-migrate --env postgres db:drop",
    "db-create-all": "npm run db-create -- notes_app_prod || true && npm run db-create -- notes_app_dev || true && npm run db-create -- notes_app_test || true",
    "copyfiles-to-dist": "./node_modules/copyfiles/copyfiles -f './src/graphql/*.graphql' ./dist/graphql/",
    "codegen": "graphql-codegen --config codegen.yml",
    "start-dev": "npm run copyfiles-to-dist && tsc-watch --onSuccess \"node ./dist/server.js\"",
    "start-prod": "npm run copyfiles-to-dist && tsc && APP_MODE=prod node ./dist/server.js",
    "start": "npm run start-dev",
    "build": "npx tsc && npm run copyfiles-to-dist",
    "test": "APP_MODE=test jest --runInBand --detectOpenHandles",
    "test-watch": "APP_MODE=test jest --runInBand --detectOpenHandles --watchAll",
    "postinstall": "npm run build"
  },
  "jest": {
    "verbose": true,
    "testEnvironment": "node",
    "transform": {
      "^.+\\.(ts|tsx)?$": "ts-jest"
    },
    "testPathIgnorePatterns": [
      "<rootDir>/src/config/",
      "<rootDir>/dist/"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/src/config/jest.setup.js"
    ],
    "testMatch": [
      "**/__tests__/**/*.+(ts|tsx|js)",
      "**/?(*.)+(spec|test).+(ts|tsx|js)"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  },
  "dependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/bluebird": "^3.5.32",
    "@types/compression": "^1.7.0",
    "@types/cors": "^2.8.7",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.8",
    "@types/helmet": "^0.0.48",
    "@types/jest": "^26.0.14",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/moxios": "^0.4.9",
    "@types/node": "^14.11.2",
    "@types/swagger-ui-express": "^4.1.2",
    "apollo-server-express": "^2.18.1",
    "axios": "0.21.1",
    "axiosist": "^0.9.0",
    "bcryptjs": "^2.4.3",
    "bluebird": "^3.7.2",
    "class-transformer": "^0.3.1",
    "class-transformer-validator": "^0.9.1",
    "class-validator": "^0.12.2",
    "compression": "^1.7.4",
    "copyfiles": "^2.4.0",
    "cors": "^2.8.5",
    "db-migrate": "^0.11.11",
    "db-migrate-pg": "^1.2.2",
    "dotenv": "^8.2.0",
    "express": "5.0.0-alpha.8",
    "helmet": "^4.1.1",
    "jest": "^26.4.2",
    "jsonwebtoken": "^8.5.1",
    "moxios": "^0.4.0",
    "pg-promise": "^10.6.2",
    "reflect-metadata": "^0.1.13",
    "swagger-ui-express": "^4.1.4",
    "ts-jest": "^26.4.1",
    "tsc-watch": "^4.2.9",
    "typescript": "^4.0.3"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "^1.17.10",
    "@graphql-codegen/introspection": "^1.18.0",
    "@graphql-codegen/typescript": "^1.17.10",
    "@graphql-codegen/typescript-document-nodes": "^1.17.8",
    "@graphql-codegen/typescript-resolvers": "^1.17.10",
    "yarn-upgrade-all": "^0.5.4"
  }
}